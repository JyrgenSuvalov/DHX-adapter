<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>ee.ria.dhx</groupId>
	<artifactId>DHX-adapter</artifactId>
	<version>1.0.0</version>
	<packaging>pom</packaging>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java.version>1.7</java.version>
		<!-- Specifies which configuration resources to use in the build -->
		<resourceDir>conf/${conf}</resourceDir>
	</properties>
	<modules>
		<module>dhx-adapter-core</module>
		<module>dhx-adapter-ws</module>
		<module>dhx-adapter-server</module>
	</modules>
	<dependencies>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>1.16.12</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<version>1.3.5.RELEASE</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.ws</groupId>
			<artifactId>spring-ws-test</artifactId>
			<version>2.4.0.RELEASE</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-core</artifactId>
			<version>1.3</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>1.10.19</version>
			<scope>test</scope>
		</dependency>
	</dependencies>
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.tomcat.maven</groupId>
				<artifactId>tomcat7-maven-plugin</artifactId>
				<version>2.2</version>
				<configuration>
					<server>devbpw</server>
					<url>${tomcat.manager}</url>
					<username>${tomcat.manager.username}</username>
					<password>${tomcat.manager.password}</password>
					<path>/${conf}</path>
				</configuration>
			</plugin>
			<plugin>
				<groupId>com.jcabi</groupId>
				<artifactId>jcabi-maven-plugin</artifactId>
				<version>0.14.1</version>
				<executions>
					<execution>
						<goals>
							<goal>ajc</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.10.4</version>
				<executions>
					<execution>
						<id>attach-javadocs</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>3.0.0</version>
				<executions>
					<execution>
						<id>attach-sources</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.5</version>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<!-- <configuration> <skipTests>${ignoreIntegrationTests}</skipTests> 
					<includes> <include>**/*Integration.java</include> </includes> </configuration> -->
				<executions>
					<execution>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-deploy-plugin</artifactId>
				<version>2.8.1</version>
				<configuration>
					<altDeploymentRepository>internal.repo::default::file://${project.build.directory}/mvn-repo</altDeploymentRepository>
				</configuration>
			</plugin>
			<plugin>
				<groupId>com.github.github</groupId>
				<artifactId>site-maven-plugin</artifactId>
				<version>0.12</version>
				<configuration>
					<server>github</server>
					<message>Maven artifacts for ${project.version}</message>  <!-- git commit message -->
					<noJekyll>true</noJekyll>                                  <!-- disable webpage processing -->
					<outputDirectory>${project.build.directory}/mvn-repo</outputDirectory> <!-- matches distribution management repository url above -->
					<branch>refs/heads/mvn-repo</branch>                       <!-- remote branch name -->
					<includes>
						<include>**/*</include>
					</includes>
					<merge>true</merge>
					<repositoryName>DHX-adapter</repositoryName>      <!-- github repo name -->
					<repositoryOwner>e-gov</repositoryOwner>    <!-- github username -->
				</configuration>
				<executions>
					<!-- run site-maven-plugin's 'site' target as part of the build's normal 
						'deploy' phase -->
					<execution>
						<goals>
							<goal>site</goal>
						</goals>
						<phase>deploy</phase>
					</execution>
				</executions>
			</plugin>

		</plugins>

	</build>
	<profiles>
		<profile>
			<id>production</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<conf>production</conf>
			</properties>
		</profile>
		<profile>
			<id>development</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<properties>
				<conf>development</conf>
			</properties>
		</profile>
		<profile>
			<id>arendus-tomcat</id>
			<activation>
				<property>
					<name>env</name>
					<value>arendus-tomcat</value>
				</property>
			</activation>
			<properties>
				<conf>arendus-tomcat</conf>
				<tomcat.manager>http://localhost:8084/manager/text</tomcat.manager>
				<tomcat.manager.username>admin</tomcat.manager.username>
				<tomcat.manager.password>admin</tomcat.manager.password>
			</properties>
		</profile>
	</profiles>
	<distributionManagement>
		<repository>
			<id>internal.repo</id>
			<name>Temporary Staging Repository</name>
			<url>file://${project.build.directory}/mvn-repo</url>
		</repository>
	</distributionManagement>

</project>